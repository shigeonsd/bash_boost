#! /bin/bash
set -u
setup () 
{ 
    source "../../bash-boost.bash";
    require log
}
test__stacktrace___success () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__stacktrace___error () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__error___success () 
{ 
    do_test_t error "エラーメッセージ" || return $(failure);
    return $(success)
}
test__error___error () 
{ 
    : テストスキップ;
    return $(skipped)
}
test__warn___success () 
{ 
    do_test_t warn "警告メッセージ" || return $(failure);
    return $(success)
}
test__warn___error () 
{ 
    return $(skipped)
}
test__info___success () 
{ 
    do_test_t info "インフォメッセージ" || return $(failure);
    return $(success)
}
test__info___error () 
{ 
    return $(skipped)
}
test__debug___success () 
{ 
    echo DEBUG=true;
    DEBUG=true;
    do_test_t debug "デバッグメッセージ" || return $(failure);
    echo DEBUG=false;
    DEBUG=false;
    do_test_t debug "デバッグメッセージ" || return $(failure);
    return $(success)
}
test__debug___error () 
{ 
    return $(skipped)
}
test__die___success () 
{ 
    ( die "エラーメッセージ" 128 );
    echo ret=$?;
    [ $ret -ne 0 ] || return $(failure);
    return $(success)
}
test__die___error () 
{ 
    return $(skipped)
}
teardown () 
{ 
    :
}
