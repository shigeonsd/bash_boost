#! /bin/bash
set -u
setup () 
{ 
    source ./../../funcs/log.bash;
    source ./../../funcs/defun.bash;
    source ./../../funcs/debug.bash;
    : __do_test をオーバーライドしてテスト関数を変更する。;
    function ___do_test () 
    { 
        local _bool=${1};
        local func=${2};
        shift 2;
        local args="$@";
        ${func} "$@";
        ret=$?;
        echo "${func} ${args} => ${ret}";
        is_${_bool} ${ret};
        return $?
    }
}
test__check_point___success () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__check_point___error () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__debug_after___success () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__debug_after___error () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__debug_around___success () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__debug_around___error () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__debug_before___success () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__debug_before___error () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__debug_on_around___success () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__debug_on_around___error () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__enter___success () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__enter___error () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__leave___success () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__leave___error () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__stacktrace___success () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__stacktrace___error () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__stacktrace_before___success () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__stacktrace_before___error () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__var_dump___success () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
test__var_dump___error () 
{ 
    : テストスキップ;
    return $(skipped);
    : テストデータ;
    local data="12345";
    local expected="12345";
    : テスト実行;
    : success;
    : 'do_test_t <TEST_CONDITION> || return $(failure)';
    : failure;
    : 'do_test_f <TEST_CONDITION> || return $(failure)';
    : テスト成功;
    return $(success)
}
teardown () 
{ 
    :
}
